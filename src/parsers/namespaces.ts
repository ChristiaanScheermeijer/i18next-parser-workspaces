import { readdirSync, writeFileSync } from 'node:fs';
import { join } from 'node:path';
import { UserConfig } from 'i18next-parser';
import colors from 'colors';
import { resolveLocalesPath } from '../utils/resolve-locales-path.js';

async function formatFile(fileContents: string, outputPath: string, configPath: string) {
  try {
    const prettier = await import('prettier');
    const options = await prettier.resolveConfig(configPath);

    return prettier.format(fileContents, { ...options, filepath: outputPath });
  } catch (error: unknown) {
    console.info(colors.red('Failed to format the resources file with prettier'), error);
  }

  return fileContents;
}

export async function generateNamespaces(outputPath: string, config: UserConfig, prettierConfigPath: string, locale?: string, verbose = false) {
  const defaultLocale = locale || config.locales?.[0];
  const localesPath = resolveLocalesPath(config);

  if (!defaultLocale)
    throw new Error("Couldn't determine a locale, please configure the locales in the i18next-parser config or pass it with --locale <locale>");

  const namespaces = readdirSync(join(localesPath, defaultLocale))
    .filter((namespace) => !/_old\.json/.test(namespace) && namespace.endsWith('.json'))
    .map((namespace) => namespace.replace('.json', ''));

  if (verbose) console.info(colors.cyan('Found namespaces: ') + colors.dim(namespaces.join(', ')));

  const configContents = `// This file is generated by i18next-parser-workspaces, do not modify manually.
// Run \`$ npx i18next-parser-workspaces\` to update this file

export const NAMESPACES = ${JSON.stringify(namespaces)};`;

  const formatted = await formatFile(configContents, outputPath, prettierConfigPath);

  writeFileSync(outputPath, formatted, { encoding: 'utf-8' });

  console.info(colors.green(`Generated i18next namespaces at: `) + outputPath);
}
